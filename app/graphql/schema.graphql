"""
Requires that exactly one field must be supplied and that field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

"""Autogenerated input type of AccountUpdate"""
input AccountUpdateInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  name: String!
}

"""Autogenerated return type of AccountUpdate."""
type AccountUpdatePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [ValidationError!]
  user: User
}

"""An ISO 8601-encoded date"""
scalar Date

type Mutation {
  accountUpdate(
    """Parameters for AccountUpdate"""
    input: AccountUpdateInput!
  ): AccountUpdatePayload!
  testMutation(
    """Parameters for TestMutation"""
    input: TestMutationInput!
  ): TestMutationPayload!
}

"""An object with an ID."""
interface Node {
  """ID of the object."""
  id: ID!
}

type Query {
  testEcho(text: String): String!

  """The currently authenticated user."""
  viewer: User
}

type Subscription {
  testSubscription: Int!
}

type TestModel {
  birthday: Date
  id: ID!
  name: String!
}

"""Autogenerated input type of TestMutation"""
input TestMutationInput {
  birthday: Date

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  name: String!
}

"""Autogenerated return type of TestMutation."""
type TestMutationPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [ValidationError!]
  model: TestModel
}

type User implements Node {
  email: String!

  """ID of the object."""
  id: ID!
  isOwner: Boolean!
  name: String!
  unconfirmedEmail: String
}

type ValidationError {
  field: String!
  message: String!
}